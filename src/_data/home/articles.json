[
  {
    "key": 1,
    "title": "十个书写CSS的小技巧",
    "description": "主要记录我在书写CSS的时候常见的一些好的小技巧",
    "cover": "https://static.lieyunwang.com/upload2/file/201808/031612twajcu.jpg",
    "content": "<blockquote>\n  <p>前言：CSS最大的一个特点就是杂乱无章，属性值特别烦杂，这里特殊记忆一下几个我最常模糊的点。</p>\n</blockquote>\n<blockquote>\n  <p>知识点一、盒模型</p>\n</blockquote>\n<blockquote>\n  <p>box-sizing: content-box / border-box</p>\n  <p><code>content-box</code> : 它指的是内容盒子，也就是 AllBoxWidth = width + border + padding\n  <code>border-box</code>: 它指的是边框盒子，也就是 AllBoxWidth = width</p>\n</blockquote>\n<blockquote>\n  <p>知识点二、text-decoration</p>\n  <p><code>text-decoration-line</code>: overline给文字加上边距\n  <code>text-decoration-style</code>: dotted,虚线小圆点</p>\n</blockquote>\n<blockquote>\n  <p>知识点三、list-style</p>\n  <p><code>inside</code>: 将图标包含进边框</p>\n</blockquote>\n<blockquote>\n  <p>知识点四、@font-face</p>\n  <p><code>{ font-family: &quot;字体名自定义&quot;，src:&quot;图片路径&quot;，}</code>，自定义图标，一般来自于“ iconfont/fontawesome”</p>\n</blockquote>\n<blockquote>\n  <p>知识点五、float</p>\n  <p><code>float</code>之后的元素，会脱离文档流，并且遵循一个规则：当前的浮动元素不会高过上一个浮动元素。当前的浮动元素之后如果有行内元素（包含inline-block），\n  那么会与之保持相同水平线。\n  <code>这里其实可以解决一个问题：当子元素高度不一致的时候，会导致浮动错位，所以可以让最后一个元素{display: inline-block; float:none;}</code></p>\n</blockquote>\n<blockquote>\n  <p>知识点六、img</p>\n  <p><code>img</code>标签默认在容器中有空白，可设置：<code>font-size:0px</code>;</p>\n</blockquote>\n<blockquote>\n  <p>知识点七、flex布局\n  <code>flex布局规则</code>：父元素：<code>{ display: flex }</code>，子元素：<code>{ flex:1; //分配1份 }</code></p>\n</blockquote>\n<blockquote>\n  <p>知识点八、flex布局之shrink默认值\n  <code>flex</code>布局中，<code>shrink</code>默认值是1，当元素纵向排布的时候，可能会把它给挤没了。所以需要手动将其改为0.</p>\n</blockquote>\n<blockquote>\n  <p>知识点九、网页纵向铺满屏幕</p>\n</blockquote>\n<pre><code class=\"css\"> html,body,.container {\n   height: 100%; \n}\n</code></pre>\n<blockquote>\n  <p>知识点十、HTML的核心属性与特有属性</p>\n</blockquote>\n<pre><code class=\"bash\"># 核心属性\nid class title style\n\n# 特有属性（这里指的是元素特有属性）\na : target href \nimg: src alt\nlink: href  rel\nmeta: charset\n</code></pre>\n<blockquote>\n  <p>知识点十一 、margin-top边距重合问题</p>\n  <p>解决方案一、给父元素设置<code>overflow: hidden;</code>\n  解决方案二、给父元素设置<code>padding-top: ; box-sizing: border-box;</code>\n  解决方案三、给父元素添加<code>border: 1px solid transparent</code>\n  解决方案四、子元素浮动、定位（只要使其脱离文档流即可）</p>\n</blockquote>\n<blockquote>\n  <p>知识点十二、表单元素的三个布尔属性</p>\n</blockquote>\n<ul>\n  <li><code>selected</code></li>\n  <li><code>disabled</code></li>\n  <li><code>checked</code></li>\n</ul>\n<blockquote>\n  <p>知识点十三、选择器权重计算</p>\n  <p>只有直接访问元素的时候才会涉及到选择器的权重问题。</p>\n</blockquote>\n<blockquote>\n  <p>知识点十四、溢出文本省略号</p>\n</blockquote>\n<pre><code class=\"css\">p {\n   overflow:hidden;/*文本溢出隐藏*/\n   white-space:nowrap;/* 文本不会换行，文本会在在同一行上继续，直到遇到 &lt;br/&gt; 标签为止。*/\n   text-overflow:ellipsis;/*溢出文本显示省略号*/\n}\n</code></pre>\n<h3><a href=\"#未完待续\" id=\"未完待续\">未完待续......</a></h3>\n\n"
  },
  {
    "key": 2,
    "title": "常用的Linux实用命令",
    "description": "记录在Linux下经常使用的命令",
    "cover": "http://pic.9ht.com/up/2018-4/2018410101252.png",
    "content": "<blockquote>\n  <p>前言：有些Linux命令虽然已经熟悉了，但还是怕某一天突然忘记了，所以特意在这里记录一下。</p>\n</blockquote>\n<hr />\n<blockquote>\n  <p>Linux文件</p>\n</blockquote>\n<ul>\n  <li>重命名文件的小技巧<code>mv oldFilename newFilename</code></li>\n  <li>创建文件夹<code>mkdir Dir</code></li>\n  <li>创建文件<code>touch file</code></li>\n  <li>编辑文件<code>vi file</code>\n    <ul>\n      <li>进入编辑模式<code>i</code></li>\n      <li>保存并退出<code>esc-&gt;!wq-&gt;回车</code></li>\n      <li>不保存强退<code>esc-&gt;!q-&gt;回车</code></li>\n      <li>修改文件权限<code>chmod 权限 file</code></li>\n    </ul>\n  </li>\n</ul>\n<blockquote>\n  <p>服务器</p>\n</blockquote>\n<ul>\n  <li>连接服务器<code>ssh username@ip</code></li>\n  <li>上传文件夹<code>scp -r dir username@ip:targetDir</code></li>\n  <li>上传文件<code>scp file username@ip:targetDir</code></li>\n  <li>分发任务到后台启动<code>nohup yourcommand &amp;</code></li>\n  <li>查询所有端口使用情况<code>netstat -nlp</code></li>\n  <li>结束某一端口的任务<code>kill -9 pid</code></li>\n</ul>\n<blockquote>\n  <p>操作小技巧</p>\n</blockquote>\n<ul>\n  <li>自动补全文件名或目录名<code>按下tab</code></li>\n  <li>提示以某一个字母开头的命令<code>双击tab</code></li>\n</ul>\n<blockquote>\n  <p>操作用户</p>\n</blockquote>\n<ul>\n  <li>添加用户 <code>useradd username | adduser username</code>，如果要在家目录需要建立用目录<code>useradd -m username</code></li>\n  <li>删除用户<code>userdel username</code>(但是有一个问题那就是，用户的家目录还存留)，<code>userdel -r username</code>\n    <code>不过不用担心，你可以使用 rm -rf usernameDir</code>彻底干掉它</li>\n  <li>操作用户的组<code>usermod -g 1008 username</code>修改某个用户的组</li>\n  <li>操作组<code>groupmod -n groupname</code>修改组名</li>\n</ul>\n<h3><a href=\"#本文持续更新\" id=\"本文持续更新\">本文持续更新......</a></h3>\n\n"
  },
  {
    "key": 3,
    "title": "windows下好用的工具",
    "description": "安利Windows下常用的工具集合",
    "cover": "https://gss2.bdstatic.com/-fo3dSag_xI4khGkpoWK1HF6hhy/baike/crop%3D0%2C59%2C720%2C360%3BeWH%3D800%2C400/sign=265c2a69b63eb1355088edfb9b2e84e6/962bd40735fae6cddddfade005b30f2443a70fc3.jpg",
    "content": "<h2><a href=\"#windows工具推荐\" id=\"windows工具推荐\">windows工具推荐</a></h2>\n<blockquote>\n  <p>TOP1. <a href=\"https://cmder.net/\">Cmder</a></p>\n  <blockquote>\n    <p>一款爽到你爆的windows下cmd终端替换工具，支持部分linux命令，支持ssh、scp、支持分屏操作。公子请看下图：\n    <img src=\"https://github.com/bigbigDreamer/GraphBed/blob/master/MyBlogImg/amway/cmder.gif?raw=true\" alt=\"\" /></p>\n  </blockquote>\n</blockquote>\n<blockquote>\n  <p>TOP2. <a href=\"https://www.mydockfinder.com/\">MyDock&amp;MyFinder</a></p>\n  <blockquote>\n    <p>windows深度美化mac产品，据说是用易语言写的，完全免费，支持国产。\n    <img src=\"https://github.com/bigbigDreamer/GraphBed/blob/master/MyBlogImg/amway/myfinder.gif?raw=true\" alt=\"\" /></p>\n  </blockquote>\n</blockquote>\n<blockquote>\n  <p>TOP3. <a href=\"https://zh.snipaste.com/\">Snipaste</a></p>\n  <blockquote>\n    <p>截图、贴图、取色就靠它了，强到爆炸！强烈推荐！！！\n    <img src=\"https://github.com/bigbigDreamer/GraphBed/blob/master/MyBlogImg/amway/Snipaste.gif?raw=true\" alt=\"\" /></p>\n  </blockquote>\n</blockquote>\n<blockquote>\n  <p>TOP4. <a href=\"https://www.screentogif.com/?l=zh_cn\">ScreenToGif</a></p>\n  <blockquote>\n    <p>屏幕，摄像头和白板录像机与集成编辑器，体积只有660kb！</p>\n  </blockquote>\n</blockquote>\n<blockquote>\n  <p>TOP5. <a href=\"https://faststone-capture.en.softonic.com/\">FSCapture</a></p>\n  <blockquote>\n    <p>一款录屏工具，可以录制声音，是我用过最强大的工具之一。\n    <a href=\"https://pan.baidu.com/s/1mmck2k8P6qd-fYm7_cHC6A\">网盘链接</a>: 提取码：svd0</p>\n  </blockquote>\n</blockquote>\n<blockquote>\n  <p>TOP6. <a href=\"http://jm.wmzhe.com/\">完美解码</a></p>\n  <blockquote>\n    <p>一款好用又强大的视频播放器，记得，是好用又强大！</p>\n  </blockquote>\n</blockquote>\n<h2><a href=\"#chrome插件推荐\" id=\"chrome插件推荐\">Chrome插件推荐</a></h2>\n<h3><a href=\"#未待完续\" id=\"未待完续\">未待完续......</a></h3>\n\n"
  },
  {
    "key": 4,
    "title": "关于未来，关于职业",
    "description": "如何在规划自己的未来职业生涯",
    "cover": "https://static.lieyunwang.com/upload2/file/201808/031612twajcu.jpg",
    "content": "<h1>我还没想好该写什么</h1>"
  },
  {
    "key": 5,
    "title": "React学习小记",
    "description": "记录我在学习React的过程中的学习手札",
    "cover": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQY0BpYWR0OEYnt7XZ5gcF_kclPXdAnQyADoaIkjEegbyBvkFWO5Q",
    "content": "<h2><a href=\"#前言\" id=\"前言\">前言</a></h2>\n<blockquote>\n  <p>最近有学习React，在这里记录一下相关的心得体会。</p>\n</blockquote>\n<h2><a href=\"#react\" id=\"react\">React</a></h2>\n<h3><a href=\"#react核心概念元素和组件\" id=\"react核心概念元素和组件\">React核心概念（元素和组件）</a></h3>\n<h4><a href=\"#jsx\" id=\"jsx\">JSX</a></h4>\n<blockquote>\n  <p>JSX可以允许你通过{}插入内容，另外JSX是防止注入攻击的。</p>\n</blockquote>\n<blockquote>\n  <p>Babel 会把 JSX 转译成一个名为 React.createElement() 函数调用。</p>\n</blockquote>\n<blockquote>\n  <p>你可以在JSX中创建任何的React元素。</p>\n</blockquote>\n<h4><a href=\"#元素渲染的唯一方式\" id=\"元素渲染的唯一方式\">元素渲染的唯一方式</a></h4>\n<pre><code class=\"jsx\">ReactDOM.render(element, document.getElementById(' root '));\n</code></pre>\n<h4><a href=\"#组件props\" id=\"组件props\">组件&amp;Props</a></h4>\n<blockquote>\n  <p>简单组件（函数组件）</p>\n</blockquote>\n<pre><code class=\"jsx\">function MyComponent () {\n  let state = {\n        msg: &quot;Hello React&quot;;\n        }\n  return (\n    &lt;div&gt; Hello React &lt;/div&gt;  \n        )\n}\n\nReactDOM.render(&lt;MyComponent/&gt;, document.getElementById('root'));\n</code></pre>\n<blockquote>\n  <p>复杂组件（类继承）</p>\n</blockquote>\n<pre><code class=\"jsx\">import React, {Component} from &quot;react&quot;\n\nexport default class MyComponent  extends Component {\n    constructor(props) {\n       super(props);\n       this.state = {\n             msg: 'Hello World',\n           };\n    }\n    render() {\n        return (\n            &lt;div&gt; \n               {this.state.msg}\n            &lt;/div&gt;\n        )\n    }\n}\n\nReactDOM.render(&lt;MyComponent/&gt;, document.getElementById('root'));\n</code></pre>\n<h3><a href=\"#聪明组件与傻瓜组件\" id=\"聪明组件与傻瓜组件\">聪明组件与傻瓜组件</a></h3>\n<h4><a href=\"#聪明组件\" id=\"聪明组件\">聪明组件</a></h4>\n<p>\u200B\t聪明组件涉及数据的修改与状态的改变。</p>\n<h4><a href=\"#傻瓜组件\" id=\"傻瓜组件\">傻瓜组件</a></h4>\n<p>\u200B\t傻瓜组件只负责页面内部的元素数据的渲染，不关注数据得修改与状态的改变。</p>\n\n"
  },
  {
    "key": 6,
    "title": "你不知道的JavaScript",
    "description": "你不知道的JavaScript小记",
    "cover": "https://p.nanrenwo.net/uploads/allimg/181016/8495-1Q016143548.jpg",
    "content": "<h2><a href=\"#前言\" id=\"前言\">前言</a></h2>\n<blockquote>\n  <p>在计算机科学中，柯里化（英语：Currying），又译为卡瑞化或加里化，是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数，并且返回接受余下的参数而且返回结果的新函数的技术。这个技术由克里斯托弗·斯特雷奇以逻辑学家哈斯凯尔·加里命名的，尽管它是Moses Schönfinkel和戈特洛布·弗雷格发明的。</p>\n</blockquote>\n<blockquote>\n  <p>在直觉上，柯里化声称“如果你固定某些参数，你将得到接受余下参数的一个函数”。所以对于有两个变量的函数 {\\displaystyle y^{x}} y^{x}，如果固定了 {\\displaystyle y=2} y=2，则得到有一个变量的函数 {\\displaystyle 2^{x}} 2^{x}。</p>\n</blockquote>\n<blockquote>\n  <p>在理论计算机科学中，柯里化提供了在简单的理论模型中，比如：只接受一个单一参数的lambda演算中，研究带有多个参数的函数的方式。</p>\n</blockquote>\n<h2><a href=\"#demo\" id=\"demo\">DEMO</a></h2>\n<h3><a href=\"#匿名函数柯里化\" id=\"匿名函数柯里化\">匿名函数柯里化</a></h3>\n<pre><code class=\"javascript\">function foo(a) {\n  return function(b) {\n      return a + b;\n  }\n}\n\nfoo(4)(5);\n</code></pre>\n<h3><a href=\"#this绑定中硬式绑定实现柯里化\" id=\"this绑定中硬式绑定实现柯里化\">This绑定中硬式绑定实现柯里化</a></h3>\n<pre><code class=\"javascript\">function foo(a,b) {\n    return a+b;\n  \n}\n\nconst bar = foo.bind(5);\n\nbar(5);\n</code></pre>\n<h2><a href=\"#结尾\" id=\"结尾\">结尾</a></h2>\n<blockquote>\n  <p>函数柯里化的实现如上所示，如果你有什么疑问以及建议，欢迎滴滴。</p>\n</blockquote>\n\n"
  }
]